/***********************************************************************
 * Y86 Tools (Student Distribution)
 *
 * Copyright (c) 2002, R. Bryant and D. O'Hallaron, All rights reserved.
 * May not be used, modified, or copied without permission.
 ***********************************************************************/ 

This directory contains the student distribution of the Y86 tools.  It
is a proper subset of the master distribution, minus the solution
files found in the master distribution.

yas		Y86 assembler
yis		Y86 instruction (ISA) simulator 
hcl2c		HCL to C translator
ssim		SEQ simulator
ssim+		SEQ+ simulator
psim		PIPE simulator
y86-code/	Examples programs and and benchmark testing scripts
ptest/		Scripts for detailed automated regression testing

*************************
1. Building the Y86 tools
*************************

The Y86 simulators can be configured to support TTY and GUI
interfaces. A simulator running in TTY mode prints all information
about its run-time behavior on the terminal.  Hard to understand what's
going on, but useful for automated testing, and doesn't require any
special installation features.  A simulator running in GUI mode uses a
fancy graphical user interface.  Nice for visualizing and debugging,
but requires installation of Tcl/Tk on your system.

To build the Y86 tools, perform the following steps:

NOTE: If your instructor prepared this distribution for you, then you
can skip Step 1 and proceed directly to Step 2. The Makefile will
already have the proper values for GUIMODE, TKLIBS, and TKINC for your
system.

Step 1. Decide whether you want the TTY or GUI form of the simulators,
and then modify ./Makefile in this directory accordingly. (The changes
you make to the variables in this Makefile will override the values
already assigned in the Makefiles in the seq and pipe directories.)

Building the GUI simulators: If you have Tcl/Tk installed on your
system, then you can build the GUI form by initializing the GUIMODE,
TKLIBS, and TKINC variables, as appropriate for your system. (The
default values work for Linux systems.) 

Assigning GUIMODE=-DHAS_GUI causes the necessary GUI support code in
the simulator sources to be included.  The TKLIBS variable tells gcc
where to look for the libtcl.so and libtk.so libraries. And the TKINC
variable tells gcc where to find the tcl.h and tk.h header files.

Building the TTY simulators: If you don't have Tcl/Tk installed on
your system, then build the TTY form by commenting out all three of
these variables (GUIMODE, TKLIBS, and TKINC) in the Makefile.

Step 2: Once you've modified the Makefile to build either the GUI or
TTY form, then you can construct the entire set of Y86 tools by typing 

	unix> make clean; make

********
2. Files
********

Makefile
	Builds the Y86 tools

README
	This file

misc/	
	Source files for the Y86 assembler yas, the Y86 instruction
	simulator yis, and the isa.c file that is used by the -t option
	of the processor simulators to check the results against the
	ISA simulation.

seq/	
	Code for the SEQ and SEQ+ simulators.  Contains HCL files for
	labs and homework problems that involve modifying SEQ.

pipe/	
	Code for the PIPE simulator.  Contains HCL files for labs and
	homework problems that involve modifying PIPE.

y86-code/
	Example .ys files from CS:APP and scripts for conducting
	automated benchmark teseting of the new processor designs.

ptest/
	Automated regression testing scripts for testing processor designs.



****************************
3. Setup tcl/tk on Fedora 10
****************************
If you want to use the GUI mode of the simulator, you must setup the tcl/tk
package on your system. For Fedora 10, the system is setup this package default.
But you may get the error that "tk.h: No such file", in this case, you must find 
the tk.h file in your system and set the TKINC variable in Makefile to be the path
include tk.h.

For example: 
Change to the root user in your system and enter the "/" directory with "cd /" 
command. Find the tk.h using "find -name tk.h", then look up the result.
If the tk.h is in the /usr/lib/include directory, the TKINC variable 
should be /usr/lib/include/.

In my system, I cannot find the tk.h in my system at first. Through google, I find 
that the tk.h is included in "tk-devel-8.5.3-4.fc10.i386.rpm" package, so download 
it, and find it depends on "tcl-devel-8.5.3-1.fc10.i386 1.rpm" package. Download 
them all and setup them with "rpm -vhi XXX" command. Then the tk.h file is found 
and set the TKINC variable according to the path of tk.h. Last, I build the GUI mode
simulator on my system.